version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: inventory
    ports:
      - "5430:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  main-service:
    build:
      context: ./
      dockerfile: ./microservices/main-service/Dockerfile
    container_name: main_service
    restart: always
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://user:password@postgres:5430/inventory
      SWAGGER_PORT: 3000
    ports:
      - "3000:3000"
    env_file:
      - .env 

  product-service:
    build:
      context: ./
      dockerfile: ./microservices/product-service/dockerfile
    container_name: product_service
    restart: always
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://user:password@postgres:5430/inventory
      SWAGGER_PORT: 3001
    ports:
      - "3001:3001"
    env_file:
      - .env

  stock-movement-service:
    build:
      context: ./
      dockerfile: ./microservices/stock-movement-service/Dockerfile
    container_name: stock_movement_service
    restart: always
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://user:password@postgres:5430/inventory
      SWAGGER_PORT: 3002
    ports:
      - "3002:3002"
    env_file:
      - .env

  # audit-log-service:
  #   build:
  #     context: ./
  #     dockerfile: ./microservices/audit-log-service/Dockerfile
  #   container_name: audit_log_service
  #   restart: always
  #   depends_on:
  #     - postgres
  #   environment:
  #     DATABASE_URL: postgres://user:password@postgres:5430/inventory
  #   ports:
  #     - "3003:3003"
  #   env_file:
  #     - .env

volumes:
  postgres_data:
