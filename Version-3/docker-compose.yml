# version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "5672:5672"   
      - "15672:15672"  
    networks:
      - app_network

  postgres:
    image: postgres:13
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: inventory
    ports:
      - "5430:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  postgres-replica:
    image: postgres:13
    container_name: postgres_db_replica
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: inventory
    ports:
      - "5431:5432"
    networks:
      - app_network
    depends_on:
      - postgres
    command: ["postgres", "-c", "hot_standby=on"]

  audit-log-service:
    build:
      context: ./
      dockerfile: ./microservices/audit-log-service/Dockerfile
    container_name: audit_log_service
    depends_on:
      - rabbitmq
      - postgres
      - redis
      - postgres-replica
    environment:
      DATABASE_URL: postgres://user:password@postgres:5430/inventory
    env_file:
      - .env
    ports:
      - "3005:3005"
    networks:
      - app_network

  main-service:
    build:
      context: ./
      dockerfile: ./microservices/main-service/Dockerfile
    container_name: main_service
    restart: always
    depends_on:
      - rabbitmq
      - postgres
      - redis
      - postgres-replica
    environment:
      DATABASE_URL: postgres://user:password@postgres:5430/inventory
      SWAGGER_PORT: 3000
    ports:
      - "3000:3000"
    env_file:
      - .env
    networks:
      - app_network

  product-service:
    build:
      context: ./
      dockerfile: ./microservices/product-service/dockerfile
    container_name: product_service
    restart: always
    depends_on:
      - rabbitmq
      - postgres
      - redis
      - postgres-replica
    environment:
      DATABASE_URL: postgres://user:password@postgres:5430/inventory
      SWAGGER_PORT: 3001
    ports:
      - "3001:3001"
    env_file:
      - .env
    networks:
      - app_network

  stock-movement-service:
    build:
      context: ./
      dockerfile: ./microservices/stock-movement-service/Dockerfile
    container_name: stock_movement_service
    restart: always
    depends_on:
      - rabbitmq
      - postgres
      - redis
      - postgres-replica
    environment:
      DATABASE_URL: postgres://user:password@postgres:5430/inventory
      SWAGGER_PORT: 3002
    ports:
      - "3002:3002"
    env_file:
      - .env
    networks:
      - app_network

  redis:
    image: redis:alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    networks:
      - app_network


networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
